{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to our Data API","text":"<p>Welcome to the OEM-IoT Endpoint API reference. Here we explain how to send or retrieve data from devices in field using HTTP.</p> <p>The purpose of this document is to empower OEMs to build innovative IoT applications without having to understand firmware or embedded systems. The OEM-IoT cloud abstracts away hardware and firmware complexities, allowing the developer to focus on their application or business use case.</p> <p>This documentation explains the interaction between edge devices such as the Sentroller and the OEM-IOT Cloud.</p>"},{"location":"http_api/","title":"API URLs","text":"<p>API access can be over HTTP or HTTPs</p>"},{"location":"http_api/#security-note","title":"Security Note","text":"<p>We strongly advise to use HTTPs to make sure your data travels encrypted, avoiding the exposure of your API token and/or sensor data.</p>"},{"location":"http_api/#httphttps","title":"HTTP/HTTPS","text":"Protocol TenX Account Endpoint Port HTTP OEM http://oem-iot.com 80 HTTPS OEM https://oem-iot.com 443 <p>TenX supports SSL v1.1, TLS v1.2 and v1.3.</p> <p>Root certificates are shared separately and are available in multiple formats.</p> <ul> <li><code>PEM</code>: A certificate chain with two root certificates from our certificate authorities (CAs).</li> <li><code>DER</code>: Same as the PEM file, with an alternative encoding.</li> <li><code>CRT</code>: Same as the PEM file, with a different extension. Often referred to as .crt, .cert or .cer.</li> </ul>"},{"location":"http_api/#api-overview","title":"API OVERVIEW","text":"API name Description Get device status API Gets the status information of the device Set device configuration API Sets configuration data of the device Event notifier API Allows Client Backend to get notified of event via webhooks Event alert API Allows customers to get notified of alerts via email/ sms FOTA API Allows OEM to update firmware of devices"},{"location":"http_api/#get-device-status","title":"Get Device Status","text":"<p>This API fetches the last seen status of the Sentroller device or IoT Module.</p> <p>Usage:</p> <pre><code>https:/oem-iot.com/api/v1.6/devices/&lt;device_label&gt;/device_status\n</code></pre> <p>Where <code>&lt;device_label&gt;</code> is a string with the label of the device to which data will be sent to.</p>"},{"location":"http_api/#headers","title":"Headers","text":"<p>The <code>\"X-Auth-Token\"</code> header is required for your request:</p> Header Value Required? Description X-Auth-Token Token Yes Auth token of account"},{"location":"http_api/#examples","title":"Examples","text":"<p>Get last seen status of a device:</p> <pre><code>$ curl -X GET 'https://oem-iot.com/api/v1.6/devices/device_status\u2019 \\\n-H 'X-Auth-Token: oaXBo6ODhIjPsusNRPUGIK4d72bc73'\n</code></pre> <p>Expected response:</p> <pre><code>{\n\u00a0 \"Name\": Sentroller_mark1,\n\u00a0 \"device_id\": \"A1234\",\n\u00a0 \"battery\": 80,\n\u00a0 \"timestamp\" : 1635264014782\n\u00a0 \"Config\": [\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \"frequency\": 34,\n\u00a0 \u00a0 \u00a0 \"param1\": 0,\n\u00a0 \u00a0 \u00a0 \"param2\": 22\n\u00a0 \u00a0 }\n\u00a0 ]\n}\n</code></pre>"},{"location":"http_api/#configure-a-single-device","title":"Configure a single device","text":"<p>This API sends configuration data to a single device</p> <p>USAGE:</p> HTTP METHOD URL POST https://oem-iot.com/api/v1.6/devices;/ <p>Where <code>&lt;device_label&gt;</code>\u00a0is a string with the label of the Device to which data will be sent to.</p>"},{"location":"http_api/#headers_1","title":"Headers","text":"<p>The <code>\"X-Auth-Token\"</code> header is required for your request:</p> Header Value Required? Description X-Auth-Token Token Yes Auth token of account Content-Type application/json Yes Type of data in body"},{"location":"http_api/#examples_1","title":"Examples","text":"<p>Set configuration for a given device</p> <pre><code>$ curl -X POST 'https://oem-iot.com/api/v1.6/devices/&lt;device_label&gt;/' \\\n\u00a0-H 'Content-Type: application/json' \\\n\u00a0-H 'X-Auth-Token: oaXBo6ODhIjPsusNRPUGIK4d72bc73' \\\n\u00a0-d '{\"frequency\": 10, \u201cparam1\u201d:340}'\n</code></pre> <p>Expected response:</p> <pre><code>{\n\"Frequency\":[{\"status_code\":201}],\n\"param1\":[{\"status_code\":201}]\n}\n</code></pre>"},{"location":"http_api/#event-notifier-api","title":"Event Notifier API","text":"<p>This API allows the OEM-IOT Cloud to inform the customer app of events of interest.</p> <p>USAGE:</p> HTTP METHOD URL POST https://oem-iot.com/api/v1.6/devices/&lt;device_label&gt;/ <p>Where <code>&lt;device_label&gt;</code>\u00a0is a string with the label of the Device to which data will be sent to.</p>"},{"location":"http_api/#headers_2","title":"Headers","text":"<p>The <code>\"X-Auth-Token\"</code> header is required for your request:</p> Header Value Required? Description X-Auth-Token Token Yes Auth token of account Content-Type application/json Yes Type of data in body <p>Events of interest</p> Config settings have taken effect Configuration changes at console have taken effect Low battery Battery low on device FOTA results FOTA success/ fail Sensor event Sensor reading crosses threshold Device online Device has come online <p>Note: OEM needs to provide a callback API which will get invoked when above events of interest occur on a device.</p>"},{"location":"http_api/#example1","title":"Example1","text":"<p>Get notified when a configuration has taken effect</p> <pre><code>$ curl -X POST 'https://oem-iot.com/api/v1.6/devices/&lt;device_label&gt;/' \\\n-H 'Content-Type: application/json' \\\n-H 'X-Auth-Token: oaXBo6ODhIjPsusNRPUGIK4d72bc73' \\\n-d '{\"config_event_id\":  (\"https://&lt;your-url&gt;/&lt;your-notification-api&gt;\"), \u201cconfig_event_param\u201d:0}'\n</code></pre> <p>Expected response:</p> <pre><code>200 OK\n</code></pre>"},{"location":"http_api/#example2","title":"Example2","text":"<p>Get notified when sensor level crosses a threshold. In this case 450 is the threshold.</p> <pre><code>$ curl -X POST 'https://oem-iot.com/api/v1.6/devices/&lt;device_label&gt;/' \\\n-H 'Content-Type: application/json' \\\n-H 'X-Auth-Token: oaXBo6ODhIjPsusNRPUGIK4d72bc73' \\\n-d '{\"sensor_event_id\":  [\"https://&lt;your-url&gt;/&lt;your-notification-api&gt;\"], \u201csensor_event_param\u201d:450}'\n</code></pre> <p>Expected response:</p> <pre><code>200 OK\n</code></pre>"},{"location":"http_api/#event-alert-api","title":"Event ALERT API","text":"<p>This API allows the 10X Cloud to inform the customer of events of interest. While the Notifier invokes callbacks, the alert API will send emails, SMS etc</p> <p>USAGE:</p> HTTP METHOD URL POST https://oem-iot.com/api/v1.6/devices/&lt;device_label&gt;/ <p>Where <code>&lt;device_label&gt;</code>\u00a0is a string with the label of the Device to which data will be sent to.</p>"},{"location":"http_api/#headers_3","title":"Headers","text":"<p>The <code>\"X-Auth-Token\"</code> header is required for your request:</p> Header Value Required? Description X-Auth-Token Token Yes Auth token of account Content-Type application/json Yes Type of data in body"},{"location":"http_api/#events-of-interest","title":"Events of interest","text":"Low battery Battery low on device Sensor event Sensor reading crosses threshold <p>Methods of alert :</p> <p>Email, SMS, Push Notification (in development)</p> <p>Note:</p> <p>OEM needs to provide an email address or phone number which will get contacted when above events of interest occur on a device.</p>"},{"location":"http_api/#example1_1","title":"Example1","text":"<p>Get an SMS / text message when sensor reading crosses given threshold</p> <pre><code>$ curl -X POST 'https://oem-iot.com/api/v1.6/devices/&lt;device_label&gt;/' \\\n-H 'Content-Type: application/json' \\\n-H 'X-Auth-Token: oaXBo6ODhIjPsusNRPUGIK4d72bc73' \\\n-d '{\"sensor_alert_id\":  [\"+1-800-654-xxyy\"], \u201csensor_alert_method\u201d:\u201dsms\u201d}'\n</code></pre> <p>Expected response:</p> <pre><code>200 OK\n</code></pre>"},{"location":"http_api/#example2_1","title":"Example2","text":"<p>Get an email when battery reading crosses given threshold</p> <pre><code>$ curl -X POST 'https://oem-iot.com/api/v1.6/devices/&lt;device_label&gt;/' \\\n-H 'Content-Type: application/json' \\\n-H 'X-Auth-Token: oaXBo6ODhIjPsusNRPUGIK4d72bc73' \\\n-d '{\"battery_event_id\":  [\"customer_name@gmail.com\"], \u201cbattery_alert_method\u201d:\u201demail\u201d}'\n</code></pre> <p>Expected response:</p> <pre><code>200 OK\n</code></pre>"},{"location":"http_api/#fota-api","title":"FOTA API","text":"<p>This API allows the 10X Cloud to perform an over the air firmware update (FOTA)</p> <p>USAGE:</p> HTTP METHOD URL POST https://oem-iot.com/api/v1.6/devices/&lt;device_label&gt;/ <p>Where <code>&lt;device_label&gt;</code>\u00a0is a string with the label of the Device to which data will be sent to.</p>"},{"location":"http_api/#headers_4","title":"Headers","text":"<p>The <code>\"X-Auth-Token\"</code> header is required for your request:</p> Header Value Required? Description X-Auth-Token Token Yes Auth token of account Content-Type application/json Yes Type of data in body"},{"location":"http_api/#note-firmware-must-be-placed-in-a-web-accessible-location-cloud-bucket-web-server-file-server-etc","title":"Note: firmware must be placed in a web accessible location (cloud bucket, web server, file server etc)","text":""},{"location":"http_api/#example1_2","title":"Example1","text":"<p>Get an SMS / text message when sensor reading crosses given threshold</p> <pre><code>$ curl -X POST 'https://oem-iot.com/api/v1.6/devices/&lt;device_label&gt;/' \\\n-H 'Content-Type: application/json' \\\n-H 'X-Auth-Token: oaXBo6ODhIjPsusNRPUGIK4d72bc73' \\\n-d '{\"fota_request\":  [\u201chttp://s3.amazonaws.com/[bucket_name]/filename\"]}'\n</code></pre> <p>Expected response:</p> <pre><code>200 OK\n</code></pre>"},{"location":"http_auth/","title":"Authentication","text":"<p>Every request sent to the 10X Cloud requires a token. A token is a unique key that authorizes requests sent to the 10X IoT Cloud. Tokens valid for 6 hours and can be generated using your account\u2019s API Key. Tokens are short lived. Tokens are auto renewed once deployment is complete.. How to send a token in a request:</p> <p><code>X-Auth-Token=token</code></p> <p>Note: Do not send tokens as a query parameter as the token is visible (to logs, browser history and packet sniffers)</p> <p>//Example Request to create a device with Token in\u00a0the Header</p> <pre><code>curl -X POST 'https://oem-iot.com/api/v1.0/devices/' \\\n-H 'Content-Type: application/json' \\\n-H 'X-Auth-Token: oaXBo6ODhIjPsusNRPUGIK4d72bc73' \\\n-d '{}'\n</code></pre>"},{"location":"http_overview/","title":"HTTP Overview","text":"<p>HTTP is the main internet protocol for information exchange in the Internet. It also supports data encryption, which is usually called secure HTTP or HTTPs. When you use a web browser (Firefox, Chrome, Edge, etc.) you are sending and receiving packages using HTTP or HTTPs. Because of this, it is  not surprising to see that HTTPs has become a popular option for data exchange for IoT.</p> <p>When a developer implements HTTPs communication, they should look for a RESTful Application Programming Interface, or REST API, which exposes all the endpoints required to interact with a third-party application (like the OEM-IOT Cloud). In this section, you have a reference of our REST API that allows you to understand how to send and retrieve data from our servers.</p> <p>HTTP requests</p> <p>The following methods are specified within the HTTP standard:</p> HTTP METHOD DESCRIPTION GET Used to retrieve information POST Used to send information <p>HTTP is a request/response protocol, this means that every request that you make is answered by the server. This response includes a number (response code) and a body. For example, when you make a request to retrieve a file on a website \"(e.g. \"Get me the file 'index.html'\" )\", you are effectively sending a GET request. If the request is correct, the server will typically return a 200 response code, along with requested body, in this case the file.</p> <p>An HTTP request also needs the following parameters:</p> <ul> <li><code>Host</code>: Specifies the server you will be making HTTP requests to, e.g. https://oem-iot.com</li> <li><code>Path</code>: This is typically the remaining portion of the URL that specifies the resource you want to consume, e.g. if an API endpoint is: <code>oem-iot.com/api/v1.6/devices/my-device</code> the path is <code>/api/v1.6/devices/my-device</code></li> <li><code>Headers</code>: Define the operating parameters of the HTTP request such as <code>X-Auth-Token</code>, <code>Content-Type</code>, <code>Content-Length</code>, etc.</li> <li><code>Body/payload</code>: In the case of POST and PATCH requests, the body is the data sent to the server, usually as a stringified JSON. By convention GET requests should not have a body because they are meant to request data, not sending them.</li> </ul> <p>OEM-IOT Cloud accepts data as JavaScript Object Notation or JSON. JSON is a typical HTTP data type, it is a collection of name/value pairs. In various programming languages, this is treated as an object, record, struct, dictionary, hash table, keyed list, or associative array. It is also human readable and language independent. An example of a JSON that TenX accepts can be seen below:</p> <p>JSON</p> <pre><code>{\"Frequency\": {\"value\":10, \"timestamp\": 1534881387000, \"context\": {\"machine\": \"1st floor\"}}}\n</code></pre> <p>A typical HTTP request to TenX should be set as below:</p> <p>Text</p> <pre><code>POST {PATH} HTTP/1.1&lt;CR&gt;&lt;LN&gt;\nHost: {HOST}&lt;CR&gt;&lt;LN&gt;\nUser-Agent: {USER_AGENT}&lt;CR&gt;&lt;LN&gt;\nX-Auth-Token: {TOKEN}&lt;CR&gt;&lt;LN&gt;\nContent-Type: application/json&lt;CR&gt;&lt;LN&gt;\nContent-Length: {PAYLOAD_LENGTH}&lt;CR&gt;&lt;LN&gt;&lt;CR&gt;&lt;LN&gt;\n{PAYLOAD}\n&lt;CR&gt;&lt;LN&gt;\n</code></pre> <p>Where:</p> <ul> <li><code>{PATH}</code>: Path to the resource to consume     Example: <code>/api/v1.6/variables/</code> to get user's variables information.</li> <li><code>{HOST}</code>: Host URL.     Example: oem-iot.com</li> <li><code>{USER_AGENT}</code>: An optional string used to identify the type of client, be it by application type, operating system, software vendor or software version of the requesting user agent.     Examples: <code>OEM_CLOUD, CUST_DEVICE</code></li> <li><code>{TOKEN}</code>: Unique key that authorizes your device to ingest data inside your OEM-IOT account.</li> <li><code>{PAYLOAD_LENGTH}</code>: The number of characters of your payload.     Example: The payload <code>{\"Frequency\": 20}</code> will have a content-length of 19.</li> <li><code>{PAYLOAD}</code>: Data to send.     Example: <code>{\"Frequency\": 20}</code></li> </ul>"},{"location":"oec_arc/","title":"OEM IOT CONNECT ARCHITECTURE","text":""},{"location":"oec_intro/","title":"INTRODUCTION","text":"<p>OEM-IOT connect allows devices (sensors, actuators, edge devices), to be securely and quickly cloud connected.  The purpose of this Cloud product is to empower OEMs to build innovative IoT applications without having to understand or maintain cloud infrastructure neccessary to onboard, maintain and manage large number of edge devices. The OEM-IoT Connect also abstracts away hardware and firmware complexities, allowing the developer to focus on their application or business use case, using a simple API.</p> <p>This documentation explains the interaction between edge devices such as the Sentroller and the OEM-IOT Cloud. Here we explain how to send or retrieve data from devices in field using HTTP.</p>"}]}